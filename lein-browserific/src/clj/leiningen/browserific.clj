(ns leiningen.browserific
  (:require [leiningen.browserific.config :as conf]
            [leiningen.help :as lhelp]
            [leiningen.core.main :as lmain]
            [clojure.java.io :as io]
            [clojure-watch.core :refer [start-watch]]))

;; NOTE: obviously we'll need to add the parser for files too. Get this
;; after the parser is done.
(defn- once
  "Compile browserific files once and quit"
  []
  (println "Compiling Browserific files.")
  (conf/build-configs))

(defn- auto
  "Automatically recompile browserific files when they are changed"
  [project]
  (start-watch [{:path (get-in project [:browserific :source-paths])
                 :event-types [:create :modify :delete]
                 :bootstrap #(println "Compiling Browserific files.")
                 :callback #(conf/build-configs)
                 :options {:recursive true}}]))

(defn- clean
  "Remove files previously generated by browserific"
  [])

(defn- sample
  "Shows a sample config.edn for either extension, mobile, or desktop.
   If no platform is specified, a sample with all three platforms will be
   shown."
  [& type]
  (case (first type)
    "extension" (-> (io/resource "samples/extension-sample.edn") slurp println)
    "mobile" (-> (io/resource "samples/mobile-sample.edn") slurp println)
    "desktop" (-> (io/resource "samples/desktop-sample.edn") slurp println)
    (-> (io/resource "samples/all-samples.edn") slurp println)))

(defn- config
  "Launch a server over port 4242 that has a GUI for building a config.edn file"
  [])

;; TODO: add more specific commands like test, package, etc.
(defn browserific
  "Run lein-browserific"
  {:help-arglists '([once auto clean sample config])
   :subtasks [#'once #'auto #'clean #'sample #'config]}
  ([project]
     (println
      (lhelp/help-for "browserific"))
     (lmain/abort))
  ([project subtask & args]
     (case subtask
       "once" (once)
       "auto" (auto project)
       "clean" (println "clean not done")
       "sample" (apply sample args)
       (do
          (println
            "\033[31mERROR: Subtask " (str subtask ) " not found.\033[0m"
            (lhelp/subtask-help-for *ns* #'browserific))
          (lmain/abort)))))
